services:
  postgresql:
    image: postgres
    restart: unless-stopped
    env_file: .env
    container_name: postgresql
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    restart: unless-stopped
    env_file: .env
    container_name: redis
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  chromadb:
    image: chromadb/chroma
    restart: unless-stopped
    container_name: chromadb
    environment:
      - ANONYMIZED_TELEMETRY=False
    env_file: .env
    volumes:
      - chroma:/chroma/chroma
      - ./chroma/config.yaml:/config.yaml
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f curl http://localhost:8000/api/v2/heartbeat || exit 1" ]
      interval: 10s
      retries: 5

  backend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: backend
    env_file: .env
    networks:
      - app-network
    depends_on:
      - chromadb
      - postgresql
      - redis

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8081:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: [ "CMD", "nginx", "-t" ]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgresql:
    external: true
  chroma:
    external: true